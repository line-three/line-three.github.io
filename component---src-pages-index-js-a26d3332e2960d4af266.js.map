{"version":3,"file":"component---src-pages-index-js-a26d3332e2960d4af266.js","mappings":"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","sources":["webpack://gatsby-starter-blog/./src/components/bio.js","webpack://gatsby-starter-blog/./src/components/layout.js","webpack://gatsby-starter-blog/./src/components/seo.js","webpack://gatsby-starter-blog/./src/pages/index.js"],"sourcesContent":["/**\n * Bio component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport { StaticImage } from \"gatsby-plugin-image\"\n\nconst Bio = () => {\n  const data = useStaticQuery(graphql`\n    query BioQuery {\n      site {\n        siteMetadata {\n          author {\n            name\n            summary\n          }\n          social {\n            twitter\n          }\n        }\n      }\n    }\n  `)\n\n  // Set these values by editing \"siteMetadata\" in gatsby-config.js\n  const author = data.site.siteMetadata?.author\n  const social = data.site.siteMetadata?.social\n\n  return (\n    <div className=\"bio\">\n      {/* <StaticImage\n        className=\"bio-avatar\"\n        layout=\"fixed\"\n        formats={[\"auto\", \"webp\", \"avif\"]}\n        src=\"../images/profile-pic.png\"\n        width={50}\n        height={50}\n        quality={95}\n        alt=\"Profile picture\"\n      />\n      {author?.name && (\n        <p>\n          Written by <strong>{author.name}</strong> {author?.summary || null}\n          {` `}\n          <a href={`https://twitter.com/${social?.twitter || ``}`}>\n            You should follow them on Twitter\n          </a>\n        </p>\n      )} */}\n      \n    </div>\n  )\n}\n\nexport default Bio\n","import * as React from \"react\"\nimport { Link } from \"gatsby\"\n\nconst Layout = ({ location, title, children }) => {\n  const rootPath = `${__PATH_PREFIX__}/`\n  const isRootPath = location.pathname === rootPath\n  let header\n\n  if (isRootPath) {\n    header = (\n      <h1 className=\"main-heading\">\n        <Link to=\"/\">{title}</Link>\n      </h1>\n    )\n  } else {\n    header = (\n      <Link className=\"header-link-home\" to=\"/\">\n        {title}\n      </Link>\n    )\n  }\n\n  return (\n    <div className=\"global-wrapper\" data-is-root-path={isRootPath}>\n      <header className=\"global-header\">{header}</header>\n      <main>{children}</main>\n      <footer>\n        @line-three\n      </footer>\n    </div>\n  )\n}\n\nexport default Layout\n","/**\n * SEO component that queries for data with\n * Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nconst Seo = ({ description, title, children }) => {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            social {\n              twitter\n            }\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const defaultTitle = site.siteMetadata?.title\n\n  return (\n    <>\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\n      <meta name=\"description\" content={metaDescription} />\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={metaDescription} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta name=\"twitter:card\" content=\"summary\" />\n      <meta\n        name=\"twitter:creator\"\n        content={site.siteMetadata?.social?.twitter || ``}\n      />\n      <meta name=\"twitter:title\" content={title} />\n      <meta name=\"twitter:description\" content={metaDescription} />\n      {children}\n    </>\n  )\n}\n\nexport default Seo\n","import * as React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Bio from \"../components/bio\"\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\n\nconst BlogIndex = ({ data, location }) => {\n  const siteTitle = data.site.siteMetadata?.title || `Title`\n  const posts = data.allMarkdownRemark.nodes\n\n  if (posts.length === 0) {\n    return (\n      <Layout location={location} title={siteTitle}>\n        <Bio />\n        <p>\n          No blog posts found. Add markdown posts to \"content/blog\" (or the\n          directory you specified for the \"gatsby-source-filesystem\" plugin in\n          gatsby-config.js).\n        </p>\n      </Layout>\n    )\n  }\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <Bio />\n      <ol style={{ listStyle: `none` }}>\n        {posts.map(post => {\n          const title = post.frontmatter.title || post.fields.slug\n\n          return (\n            <li key={post.fields.slug}>\n              <article\n                className=\"post-list-item\"\n                itemScope\n                itemType=\"http://schema.org/Article\"\n              >\n                <header>\n                  <h2>\n                    <Link to={post.fields.slug} itemProp=\"url\">\n                      <span itemProp=\"headline\">{title}</span>\n                    </Link>\n                  </h2>\n                  <small>{post.frontmatter.date}</small>\n                </header>\n                <section>\n                  <p\n                    dangerouslySetInnerHTML={{\n                      __html: post.frontmatter.description || post.excerpt,\n                    }}\n                    itemProp=\"description\"\n                  />\n                </section>\n              </article>\n            </li>\n          )\n        })}\n      </ol>\n    </Layout>\n  )\n}\n\nexport default BlogIndex\n\n/**\n * Head export to define metadata for the page\n *\n * See: https://www.gatsbyjs.com/docs/reference/built-in-components/gatsby-head/\n */\nexport const Head = () => <Seo title=\"All posts\" />\n\nexport const pageQuery = graphql`\n  {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(sort: { frontmatter: { date: DESC } }) {\n      nodes {\n        excerpt\n        fields {\n          slug\n        }\n        frontmatter {\n          date(formatString: \"MMMM DD, YYYY\")\n          title\n          description\n        }\n      }\n    }\n  }\n`\n"],"names":["Bio","_data$site$siteMetada","_data$site$siteMetada2","data","useStaticQuery","site","siteMetadata","author","social","React","className","_ref","location","title","children","isRootPath","pathname","header","Link","to","_site$siteMetadata","_site$siteMetadata2","_site$siteMetadata2$s","description","metaDescription","defaultTitle","name","content","property","twitter","siteTitle","posts","allMarkdownRemark","nodes","length","Layout","style","listStyle","map","post","frontmatter","fields","slug","key","itemScope","itemType","itemProp","date","dangerouslySetInnerHTML","__html","excerpt","Head","Seo"],"sourceRoot":""}